{"ast":null,"code":"var _jsxFileName = \"/home/guttermouth/dev/UNCHAIN/ETH-NFT-game/nft-game-starter-project/src/Components/SelectCharacter/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./SelectCharacter.css\";\nimport { ethers } from \"ethers\";\nimport { CONTRACT_ADDRESS, transformCharacterData } from \"../../constants\";\nimport LoadingIndicator from \"../LoadingIndicator\";\nimport myEpicGame from \"../../utils/MyEpicGame.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelectCharacter = _ref => {\n  _s();\n\n  let {\n    setCharacterNFT\n  } = _ref;\n  const [characters, setCharacters] = useState([]);\n  const [gameContract, setGameContract] = useState(null);\n  const [mintingCharacter, setMintingCharacter] = useState(false);\n\n  const mintCharacterNFTAction = characterId => async () => {\n    try {\n      if (gameContract) {\n        setMintingCharacter(true);\n        const mintTxn = await gameContract.mintCharacterNFT(characterId);\n        await mintTxn.wait();\n        console.log(\"mintTxn: \", mintTxn);\n        setMintingCharacter(false);\n      }\n    } catch (error) {\n      console.log(error);\n      setMintingCharacter(false);\n    }\n  };\n\n  const renderCharacters = () => {\n    return characters.map((character, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"character-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name-container\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: character.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: character.imageURI,\n        alt: character.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"character-mint-button\",\n        onClick: mintCharacterNFTAction(index),\n        children: `Mint ${character.name}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this)]\n    }, character.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this));\n  };\n\n  useEffect(() => {\n    const {\n      ethereum\n    } = window;\n\n    if (ethereum) {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      const gameContract = new ethers.Contract(CONTRACT_ADDRESS, myEpicGame.abi, signer);\n      setGameContract(gameContract);\n    } else {\n      console.log(\"Ethereum object not found\");\n    }\n  }, []);\n  useEffect(() => {\n    const getCharacters = async () => {\n      try {\n        const charactersTxn = await gameContract.getAllDefaultCharacters();\n        console.log(\"charactersTxn\", charactersTxn);\n        const characters = charactersTxn.map(characterTxn => {\n          return transformCharacterData(characterTxn);\n        });\n        setCharacters(characters);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    const onCharacterMint = async (sender, tokenId, characterIndex) => {\n      console.log(`CharacterNFTMinted - sender: ${sender} tokenId: ${tokenId.toNumber()} characterIndex: ${characterIndex.toNumber()}`);\n\n      if (gameContract) {\n        const characterNFT = await gameContract.checkIfUserHasNFT();\n        console.log(\"CharacterNFT: \", transformCharacterData(characterNFT));\n        setCharacterNFT(transformCharacterData(characterNFT));\n        alert(`NFT キャラクーが Mint されました -- リンクはこちらです: https://rinkeby.rarible.com/token/${gameContract.address}:${tokenId.toNumber()}?tab=details`);\n      }\n    };\n\n    if (gameContract) {\n      getCharacters();\n      gameContract.on(\"CharacterNFTMinted\", onCharacterMint);\n    }\n\n    return () => {\n      if (gameContract) {\n        gameContract.off(\"CharacterNFTMinted\", onCharacterMint);\n      }\n    };\n  }, [gameContract]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"select-character-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\u23EC \\u4E00\\u7DD2\\u306B\\u6226\\u3046 NFT \\u30AD\\u30E3\\u30E9\\u30AF\\u30BF\\u30FC\\u3092\\u9078\\u629E \\u23EC\", characters.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"character-grid\",\n        children: renderCharacters()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), mintingCharacter && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"indicator\",\n        children: [/*#__PURE__*/_jsxDEV(LoadingIndicator, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Minting In Progress...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SelectCharacter, \"YAIluGJumFDmJAPdOeDT94pTudM=\");\n\n_c = SelectCharacter;\nexport default SelectCharacter;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectCharacter\");","map":{"version":3,"sources":["/home/guttermouth/dev/UNCHAIN/ETH-NFT-game/nft-game-starter-project/src/Components/SelectCharacter/index.js"],"names":["React","useEffect","useState","ethers","CONTRACT_ADDRESS","transformCharacterData","LoadingIndicator","myEpicGame","SelectCharacter","setCharacterNFT","characters","setCharacters","gameContract","setGameContract","mintingCharacter","setMintingCharacter","mintCharacterNFTAction","characterId","mintTxn","mintCharacterNFT","wait","console","log","error","renderCharacters","map","character","index","name","imageURI","ethereum","window","provider","providers","Web3Provider","signer","getSigner","Contract","abi","getCharacters","charactersTxn","getAllDefaultCharacters","characterTxn","onCharacterMint","sender","tokenId","characterIndex","toNumber","characterNFT","checkIfUserHasNFT","alert","address","on","off","length"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport \"./SelectCharacter.css\";\nimport { ethers } from \"ethers\";\nimport { CONTRACT_ADDRESS, transformCharacterData } from \"../../constants\";\nimport LoadingIndicator from \"../LoadingIndicator\";\nimport myEpicGame from \"../../utils/MyEpicGame.json\";\n\nconst SelectCharacter = ({setCharacterNFT})=>{\n    const [characters, setCharacters] = useState([]);\n    const [gameContract, setGameContract] = useState(null);\n    const [mintingCharacter, setMintingCharacter] = useState(false);\n\n    const mintCharacterNFTAction = (characterId) => async () => {\n        try {\n            if (gameContract){\n                setMintingCharacter(true);\n                const mintTxn = await gameContract.mintCharacterNFT(characterId);\n                await mintTxn.wait();\n                console.log(\"mintTxn: \", mintTxn);\n                setMintingCharacter(false);\n            }\n        } catch(error){\n            console.log(error);\n            setMintingCharacter(false);\n        }\n    }\n\n    const renderCharacters = () => {\n        return (\n            characters.map((character, index) => (\n                <div className=\"character-item\" key={character.name}>\n                    <div className=\"name-container\">\n                        <p>{character.name}</p>\n                    </div>\n                    <img src={character.imageURI} alt={character.name}/>\n                    <button\n                        type=\"button\"\n                        className=\"character-mint-button\"\n                        onClick={mintCharacterNFTAction(index)}\n                    >{`Mint ${character.name}`}</button>\n                </div>\n            )))\n    };\n\n    useEffect(()=>{\n        const {ethereum} = window;\n        if (ethereum) {\n            const provider = new ethers.providers.Web3Provider(ethereum);\n            const signer = provider.getSigner();\n            const gameContract = new ethers.Contract(\n                CONTRACT_ADDRESS,\n                myEpicGame.abi,\n                signer\n            );\n            setGameContract(gameContract);\n\n        } else {\n            console.log(\"Ethereum object not found\");\n        }\n    }, []);\n\n    useEffect(()=>{\n        const getCharacters = async ()=>{\n            try{\n                const charactersTxn = await gameContract.getAllDefaultCharacters();\n                console.log(\"charactersTxn\", charactersTxn);\n                const characters = charactersTxn.map((characterTxn) => {\n                    return transformCharacterData(characterTxn);\n                });\n                setCharacters(characters);\n            } catch(error){\n                console.log(error);\n            }\n        }\n\n        const onCharacterMint = async (sender, tokenId, characterIndex) => {\n            console.log(\n                `CharacterNFTMinted - sender: ${sender} tokenId: ${tokenId.toNumber()} characterIndex: ${characterIndex.toNumber()}`\n            );\n            if (gameContract){\n                const characterNFT = await gameContract.checkIfUserHasNFT();\n                console.log(\"CharacterNFT: \", transformCharacterData(characterNFT));\n                setCharacterNFT(transformCharacterData(characterNFT));\n                alert(\n                    `NFT キャラクーが Mint されました -- リンクはこちらです: https://rinkeby.rarible.com/token/${gameContract.address}:${tokenId.toNumber()}?tab=details`\n                );\n            }\n        };\n\n        if (gameContract){\n            getCharacters();\n            gameContract.on(\"CharacterNFTMinted\", onCharacterMint);\n        }\n\n        return () => {\n            if (gameContract){\n                gameContract.off(\"CharacterNFTMinted\", onCharacterMint);\n            }\n        }\n    }, [gameContract]);\n\n\n    return(\n        <div className=\"select-character-container\">\n            <h2>\n                ⏬ 一緒に戦う NFT キャラクターを選択 ⏬\n                {characters.length > 0 && (\n                    <div className=\"character-grid\">{renderCharacters()}</div>\n                )}\n            </h2>\n            {mintingCharacter && (\n      <div className=\"loading\">\n      <div className=\"indicator\">\n        <LoadingIndicator />\n        <p>Minting In Progress...</p>\n      </div>\n    </div>\n            )\n\n            }\n        </div>\n    )\n}\n\nexport default SelectCharacter;"]},"metadata":{},"sourceType":"module"}