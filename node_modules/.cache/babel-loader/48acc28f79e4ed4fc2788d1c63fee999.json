{"ast":null,"code":"var _jsxFileName = \"/home/guttermouth/dev/UNCHAIN/ETH-NFT-game/nft-game-starter-project/src/Components/Arena/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { CONTRACT_ADDRESS, transformCharacterData } from \"../../constants\";\nimport myEpicGame from \"../../utils/MyEpicGame.json\";\nimport \"./Arena.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Arena = _ref => {\n  _s();\n\n  let {\n    characterNFT\n  } = _ref;\n  const [gameContract, setGameContract] = useState(null);\n  const [boss, setBoss] = useState(null);\n  const [attackState, setAttackState] = useState(\"\");\n\n  const runAttackAction = async () => {\n    try {\n      if (gameContract) {\n        setAttackState(\"attacking\");\n        console.log(\"Attacking boss...\");\n        const attackTxn = await gameContract.attackBoss();\n        await attackTxn.wait();\n        setAttackState(\"hit\");\n      }\n    } catch (error) {\n      console.log(error);\n      setAttackState(\"\");\n    }\n  };\n\n  useEffect(() => {\n    const fetchBoss = async () => {\n      const bossTxn = await gameContract.getBigBoss();\n      console.log(\"Boss: \", transformCharacterData(bossTxn));\n      setBoss(transformCharacterData(bossTxn));\n    };\n\n    onAttackComplete = (newBossHp, newPlayerHp) => {};\n\n    if (gameContract) {\n      fetchBoss();\n      gameContract.on(\"AttackComplete\", onAttackComplete);\n    }\n\n    return () => {};\n  }, [gameContract]);\n  useEffect(() => {\n    const {\n      ethereum\n    } = window;\n\n    if (ethereum) {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      const gameContract = new ethers.Contract(CONTRACT_ADDRESS, myEpicGame.abi, signer);\n      setGameContract(gameContract);\n    } else {\n      console.log(\"Ethereum object not found\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"arena-container\",\n    children: [boss && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"boss-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `boss-content ${attackState}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"\\uD83D\\uDD25 \", boss.name, \" \\uD83D\\uDD25\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: boss.imageURI,\n            alt: `Boss ${boss.name}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"health-bar\",\n            children: [/*#__PURE__*/_jsxDEV(\"progress\", {\n              value: boss.hp,\n              max: boss.maxHp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: `${boss.hp} / ${boss.maxHp} HP`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"attack-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cta-button\",\n          onClick: runAttackAction,\n          children: `üí• Attack ${boss.name}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this), characterNFT && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"players-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Your Character\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: characterNFT.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: characterNFT.imageURI,\n              alt: `Character ${characterNFT.name}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"health-bar\",\n              children: [/*#__PURE__*/_jsxDEV(\"progress\", {\n                value: characterNFT.hp,\n                max: characterNFT.maxHp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: `${characterNFT.hp} / ${characterNFT.maxHp} HP`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stats\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: `‚öîÔ∏è Attack Damage: ${characterNFT.attackDamage}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Arena, \"vPhjjoPmmPFQTej4qk4WP/WdhD4=\");\n\n_c = Arena;\nexport default Arena;\n\nvar _c;\n\n$RefreshReg$(_c, \"Arena\");","map":{"version":3,"sources":["/home/guttermouth/dev/UNCHAIN/ETH-NFT-game/nft-game-starter-project/src/Components/Arena/index.js"],"names":["React","useEffect","useState","ethers","CONTRACT_ADDRESS","transformCharacterData","myEpicGame","Arena","characterNFT","gameContract","setGameContract","boss","setBoss","attackState","setAttackState","runAttackAction","console","log","attackTxn","attackBoss","wait","error","fetchBoss","bossTxn","getBigBoss","onAttackComplete","newBossHp","newPlayerHp","on","ethereum","window","provider","providers","Web3Provider","signer","getSigner","Contract","abi","name","imageURI","hp","maxHp","attackDamage"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { CONTRACT_ADDRESS, transformCharacterData } from \"../../constants\";\nimport myEpicGame from \"../../utils/MyEpicGame.json\";\nimport \"./Arena.css\";\n\nconst Arena = ({characterNFT}) => {\n    const [gameContract, setGameContract] = useState(null);\n    const [boss, setBoss] = useState(null);\n    const [attackState, setAttackState] = useState(\"\");\n\n    const runAttackAction = async () => {\n        try{\n            if (gameContract) {\n                setAttackState(\"attacking\");\n                console.log(\"Attacking boss...\");\n                const attackTxn = await gameContract.attackBoss();\n                await attackTxn.wait();\n                setAttackState(\"hit\");\n            }\n        } catch(error){\n            console.log(error);\n            setAttackState(\"\");\n        }\n\n    };\n\n    useEffect(() => {\n        const fetchBoss = async () => {\n            const bossTxn = await gameContract.getBigBoss();\n            console.log(\"Boss: \", transformCharacterData(bossTxn));\n            setBoss(transformCharacterData(bossTxn));\n        }\n\n        onAttackComplete = (newBossHp, newPlayerHp) => {\n\n        }\n        if (gameContract){\n            fetchBoss();\n            gameContract.on(\"AttackComplete\", onAttackComplete);\n        }\n\n        return ()=>{\n            \n        }\n\n    }, [gameContract]);\n\n\n\n    useEffect(() => {\n        const { ethereum } = window;\n        if (ethereum) {\n          const provider = new ethers.providers.Web3Provider(ethereum);\n          const signer = provider.getSigner();\n          const gameContract = new ethers.Contract(\n            CONTRACT_ADDRESS,\n            myEpicGame.abi,\n            signer\n          );\n          setGameContract(gameContract);\n        } else {\n          console.log(\"Ethereum object not found\");\n        }\n    }, []);\n\n    return (\n        <div className=\"arena-container\">\n            {boss && (\n                <div className=\"boss-container\">\n                    <div className={`boss-content ${attackState}`}>\n                        <h2>üî• {boss.name} üî•</h2>\n                        <div className=\"image-content\">\n                            <img src={boss.imageURI} alt={`Boss ${boss.name}`} />\n                            <div className=\"health-bar\">\n                                <progress value={boss.hp} max={boss.maxHp} />\n                                <p>{`${boss.hp} / ${boss.maxHp} HP`}</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"attack-container\">\n                        <button className=\"cta-button\" onClick={runAttackAction}>\n                            {`üí• Attack ${boss.name}`}\n                        </button>\n                    </div>\n                </div>\n            )}\n            {characterNFT && (\n                <div className=\"players-container\">\n                    <div className=\"player-container\">\n                        <h2>Your Character</h2>\n                        <div className=\"player\">\n                            <div className=\"image-content\">\n                                <h2>{characterNFT.name}</h2>\n                                <img\n                                    src={characterNFT.imageURI}\n                                    alt={`Character ${characterNFT.name}`}\n                                />\n                                <div className=\"health-bar\">\n                                    <progress value={characterNFT.hp} max={characterNFT.maxHp} />\n                                    <p>{`${characterNFT.hp} / ${characterNFT.maxHp} HP`}</p>\n                                </div>\n                            </div>\n                            <div className=\"stats\">\n                                <h4>{`‚öîÔ∏è Attack Damage: ${characterNFT.attackDamage}`}</h4>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Arena;"]},"metadata":{},"sourceType":"module"}