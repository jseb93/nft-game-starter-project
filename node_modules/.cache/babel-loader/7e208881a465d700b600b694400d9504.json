{"ast":null,"code":"var _jsxFileName = \"/home/guttermouth/dev/UNCHAIN/ETH-NFT-game/nft-game-starter-project/src/Components/SelectCharacter/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./SelectCharacter.css\";\nimport { ethers } from \"ethers\";\nimport { CONTRACT_ADDRESS, transformCharacterData } from \"../../constants\";\nimport myEpicGame from \"../../utils/MyEpicGame.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelectCharacter = _ref => {\n  _s();\n\n  let {\n    setCharacterNFT\n  } = _ref;\n  const [characters, setCharacters] = useState([]);\n  const [gameContract, setGameContract] = useState(null);\n\n  const mintCharacterNFTAction = characterId => async () => {\n    try {\n      if (gameContract) {\n        const mintTxn = await gameContract.mintCharacterNFT(characterId);\n        await mintTxn.wait();\n        console.log(\"mintTxn: \", mintTxn);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const renderCharacters = () => {\n    return characters.map((character, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"character-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name-container\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: character.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: character.imageURI,\n        alt: character.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"character-mint-button\",\n        onClick: mintCharacterNFTAction(index),\n        children: `Mint ${character.name}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this)]\n    }, character.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this));\n  };\n\n  useEffect(() => {\n    const {\n      ethereum\n    } = window;\n\n    if (ethereum) {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      const gameContract = new ethers.Contract(CONTRACT_ADDRESS, myEpicGame.abi, signer);\n      setGameContract(gameContract);\n    } else {\n      console.log(\"Ethereum object not found\");\n    }\n  }, []);\n  useEffect(() => {\n    const getCharacters = async () => {\n      try {\n        const charactersTxn = await gameContract.getAllDefaultCharacters();\n        console.log(\"charactersTxn\", charactersTxn);\n        const characters = charactersTxn.map(characterTxn => {\n          return transformCharacterData(characterTxn);\n        });\n        setCharacters(characters);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    const onCharacterMint = async (sender, tokenId, characterIndex) => {\n      console.log(`CharacterNFTMinted - sender: ${sender} tokenId: ${tokenId.toNumber()} characterIndex: ${characterIndex.toNumber()}`);\n\n      if (gameContract) {\n        const characterNFT = await gameContract.checkIfUserHasNFT();\n        console.log(\"CharacterNFT: \", transformCharacterData(characterNFT));\n        SetCharacterNFT(transformCharacterData(characterNFT));\n      }\n    };\n\n    if (gameContract) {\n      getCharacters();\n      gameContract.on(\"CharacterNFTMinted\", onCharacterMint);\n    }\n\n    return () => {\n      if (gameContract) {\n        gameContract.off(\"CharacterNFTMinted\", onCharacterMint);\n      }\n    };\n  }, [gameContract]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"select-character-container\",\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\u23EC \\u4E00\\u7DD2\\u306B\\u6226\\u3046 NFT \\u30AD\\u30E3\\u30E9\\u30AF\\u30BF\\u30FC\\u3092\\u9078\\u629E \\u23EC\", characters.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"character-grid\",\n        children: renderCharacters()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SelectCharacter, \"ReBpEb1ZDzzSsIn8oOlkhmevdME=\");\n\n_c = SelectCharacter;\nexport default SelectCharacter;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectCharacter\");","map":{"version":3,"sources":["/home/guttermouth/dev/UNCHAIN/ETH-NFT-game/nft-game-starter-project/src/Components/SelectCharacter/index.js"],"names":["React","useEffect","useState","ethers","CONTRACT_ADDRESS","transformCharacterData","myEpicGame","SelectCharacter","setCharacterNFT","characters","setCharacters","gameContract","setGameContract","mintCharacterNFTAction","characterId","mintTxn","mintCharacterNFT","wait","console","log","error","renderCharacters","map","character","index","name","imageURI","ethereum","window","provider","providers","Web3Provider","signer","getSigner","Contract","abi","getCharacters","charactersTxn","getAllDefaultCharacters","characterTxn","onCharacterMint","sender","tokenId","characterIndex","toNumber","characterNFT","checkIfUserHasNFT","SetCharacterNFT","on","off","length"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport \"./SelectCharacter.css\";\nimport { ethers } from \"ethers\";\nimport { CONTRACT_ADDRESS, transformCharacterData } from \"../../constants\";\nimport myEpicGame from \"../../utils/MyEpicGame.json\";\n\nconst SelectCharacter = ({setCharacterNFT})=>{\n    const [characters, setCharacters] = useState([]);\n    const [gameContract, setGameContract] = useState(null);\n\n    const mintCharacterNFTAction = (characterId) => async () => {\n        try {\n            if (gameContract){\n                const mintTxn = await gameContract.mintCharacterNFT(characterId);\n                await mintTxn.wait();\n                console.log(\"mintTxn: \", mintTxn);\n            }\n        } catch(error){\n            console.log(error);\n        }\n    }\n\n    const renderCharacters = () => {\n        return (\n            characters.map((character, index) => (\n                <div className=\"character-item\" key={character.name}>\n                    <div className=\"name-container\">\n                        <p>{character.name}</p>\n                    </div>\n                    <img src={character.imageURI} alt={character.name}/>\n                    <button\n                        type=\"button\"\n                        className=\"character-mint-button\"\n                        onClick={mintCharacterNFTAction(index)}\n                    >{`Mint ${character.name}`}</button>\n                </div>\n            )))\n    };\n\n    useEffect(()=>{\n        const {ethereum} = window;\n        if (ethereum) {\n            const provider = new ethers.providers.Web3Provider(ethereum);\n            const signer = provider.getSigner();\n            const gameContract = new ethers.Contract(\n                CONTRACT_ADDRESS,\n                myEpicGame.abi,\n                signer\n            );\n            setGameContract(gameContract);\n\n        } else {\n            console.log(\"Ethereum object not found\");\n        }\n    }, []);\n\n    useEffect(()=>{\n        const getCharacters = async ()=>{\n            try{\n                const charactersTxn = await gameContract.getAllDefaultCharacters();\n                console.log(\"charactersTxn\", charactersTxn);\n                const characters = charactersTxn.map((characterTxn) => {\n                    return transformCharacterData(characterTxn);\n                });\n                setCharacters(characters);\n            } catch(error){\n                console.log(error);\n            }\n        }\n\n        const onCharacterMint = async (sender, tokenId, characterIndex) => {\n            console.log(\n                `CharacterNFTMinted - sender: ${sender} tokenId: ${tokenId.toNumber()} characterIndex: ${characterIndex.toNumber()}`\n            );\n            if (gameContract){\n                const characterNFT = await gameContract.checkIfUserHasNFT();\n                console.log(\"CharacterNFT: \", transformCharacterData(characterNFT));\n                SetCharacterNFT(transformCharacterData(characterNFT));\n            }\n        };\n\n        if (gameContract){\n            getCharacters();\n            gameContract.on(\"CharacterNFTMinted\", onCharacterMint);\n        }\n\n        return () => {\n            if (gameContract){\n                gameContract.off(\"CharacterNFTMinted\", onCharacterMint);\n            }\n        }\n    }, [gameContract]);\n\n\n    return(\n        <div className=\"select-character-container\">\n            <h2>\n                ⏬ 一緒に戦う NFT キャラクターを選択 ⏬\n                {characters.length > 0 && (\n                    <div className=\"character-grid\">{renderCharacters()}</div>\n                )}\n            </h2>\n        </div>\n    )\n}\n\nexport default SelectCharacter;"]},"metadata":{},"sourceType":"module"}