{"ast":null,"code":"var _jsxFileName = \"/home/guttermouth/dev/UNCHAIN/ETH-NFT-game/nft-game-starter-project/src/Components/SelectCharacter/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./SelectCharacter.css\";\nimport { ethers } from \"ethers\";\nimport { CONTRACT_ADDRESS, transformCharacterData } from \"../../constants\";\nimport myEpicGame from \"../../utils/MyEpicGame.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelectCharacter = _ref => {\n  _s();\n\n  let {\n    SelectCharacterNFT\n  } = _ref;\n  const [characters, setCharacters] = useState([]);\n  const [gameContract, setGameContract] = useState(null);\n\n  const mintCharacterNFTAction = characterId => async () => {\n    try {} catch (error) {\n      console.log(error);\n    }\n  };\n\n  const renderCharacters = () => {\n    return characters.map((character, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"character-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name-container\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: character.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: character.imageURI,\n        alt: character.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"character-mint-button\",\n        onClick: \"\",\n        children: `Mint ${character.name}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this)]\n    }, character.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this));\n  };\n\n  useEffect(() => {\n    const {\n      ethereum\n    } = window;\n\n    if (ethereum) {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      const gameContract = new ethers.Contract(CONTRACT_ADDRESS, myEpicGame.abi, signer);\n      setGameContract(gameContract);\n    } else {\n      console.log(\"Ethereum object not found\");\n    }\n  }, []);\n  useEffect(() => {\n    const getCharacters = async () => {\n      try {\n        const charactersTxn = await gameContract.getAllDefaultCharacters();\n        console.log(\"charactersTxn\", charactersTxn);\n        const characters = charactersTxn.map(characterTxn => {\n          return transformCharacterData(characterTxn);\n        });\n        setCharacters(characters);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    if (gameContract) {\n      getCharacters();\n    }\n  }, [gameContract]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"select-character-container\",\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\u23EC \\u4E00\\u7DD2\\u306B\\u6226\\u3046 NFT \\u30AD\\u30E3\\u30E9\\u30AF\\u30BF\\u30FC\\u3092\\u9078\\u629E \\u23EC\", characters.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"character-grid\",\n        children: renderCharacters()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SelectCharacter, \"ReBpEb1ZDzzSsIn8oOlkhmevdME=\");\n\n_c = SelectCharacter;\nexport default SelectCharacter;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectCharacter\");","map":{"version":3,"sources":["/home/guttermouth/dev/UNCHAIN/ETH-NFT-game/nft-game-starter-project/src/Components/SelectCharacter/index.js"],"names":["React","useEffect","useState","ethers","CONTRACT_ADDRESS","transformCharacterData","myEpicGame","SelectCharacter","SelectCharacterNFT","characters","setCharacters","gameContract","setGameContract","mintCharacterNFTAction","characterId","error","console","log","renderCharacters","map","character","index","name","imageURI","ethereum","window","provider","providers","Web3Provider","signer","getSigner","Contract","abi","getCharacters","charactersTxn","getAllDefaultCharacters","characterTxn","length"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport \"./SelectCharacter.css\";\nimport { ethers } from \"ethers\";\nimport { CONTRACT_ADDRESS, transformCharacterData } from \"../../constants\";\nimport myEpicGame from \"../../utils/MyEpicGame.json\";\n\nconst SelectCharacter = ({SelectCharacterNFT})=>{\n    const [characters, setCharacters] = useState([]);\n    const [gameContract, setGameContract] = useState(null);\n\n    const mintCharacterNFTAction = (characterId) => async () => {\n        try {\n\n        } catch(error){\n            console.log(error);\n        }\n    }\n\n    const renderCharacters = () => {\n        return (\n            characters.map((character, index) => (\n                <div className=\"character-item\" key={character.name}>\n                    <div className=\"name-container\">\n                        <p>{character.name}</p>\n                    </div>\n                    <img src={character.imageURI} alt={character.name}/>\n                    <button\n                        type=\"button\"\n                        className=\"character-mint-button\"\n                        onClick=\"\"\n                    >{`Mint ${character.name}`}</button>\n                </div>\n            )))\n    };\n\n    useEffect(()=>{\n        const {ethereum} = window;\n        if (ethereum) {\n            const provider = new ethers.providers.Web3Provider(ethereum);\n            const signer = provider.getSigner();\n            const gameContract = new ethers.Contract(\n                CONTRACT_ADDRESS,\n                myEpicGame.abi,\n                signer\n            );\n            setGameContract(gameContract);\n\n        } else {\n            console.log(\"Ethereum object not found\");\n        }\n    }, []);\n\n    useEffect(()=>{\n        const getCharacters = async ()=>{\n            try{\n                const charactersTxn = await gameContract.getAllDefaultCharacters();\n                console.log(\"charactersTxn\", charactersTxn);\n                const characters = charactersTxn.map((characterTxn) => {\n                    return transformCharacterData(characterTxn);\n                });\n                setCharacters(characters);\n            } catch(error){\n                console.log(error);\n            }\n        }\n\n        if (gameContract){\n            getCharacters();\n        }\n    }, [gameContract]);\n\n\n    return(\n        <div className=\"select-character-container\">\n            <h2>\n                ⏬ 一緒に戦う NFT キャラクターを選択 ⏬\n                {characters.length > 0 && (\n                    <div className=\"character-grid\">{renderCharacters()}</div>\n                )}\n            </h2>\n        </div>\n    )\n}\n\nexport default SelectCharacter;"]},"metadata":{},"sourceType":"module"}